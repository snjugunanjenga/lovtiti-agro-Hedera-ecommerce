/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Agro, AgroInterface } from "../Agro";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "farmer",
        type: "address",
      },
    ],
    name: "farmerJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "priceIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "farmer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "productBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "farmer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "productCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "stockUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyproduct",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "createFarmer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "farmer",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "increasePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "updateStock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farmer",
        type: "address",
      },
    ],
    name: "viewProducts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "stock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct agro.product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "whoFarmer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "products",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct agro.farmerstruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600255348015601457600080fd5b506110a1806100246000396000f3fe6080604052600436106100915760003560e01c80639dfc3dd1116100595780639dfc3dd11461017b578063ab71b8681461019b578063adc4e839146101ae578063db72c838146101ff578063f3122fca1461022c57600080fd5b80633c452e08146100965780634eac2fb5146100ad5780635fd8c710146100cd5780637acc0b20146100e25780638b6924791461015b575b600080fd5b3480156100a257600080fd5b506100ab610259565b005b3480156100b957600080fd5b506100ab6100c8366004610e17565b6103af565b3480156100d957600080fd5b506100ab61047a565b3480156100ee57600080fd5b5061012e6100fd366004610e39565b600060208190529081526040902080546001820154600283015460039093015491926001600160a01b039091169184565b604080519485526001600160a01b0390931660208501529183015260608201526080015b60405180910390f35b34801561016757600080fd5b506100ab610176366004610e17565b6105d2565b34801561018757600080fd5b506100ab610196366004610e17565b6107ea565b6100ab6101a9366004610e17565b61088c565b3480156101ba57600080fd5b506101ea6101c9366004610e52565b60016020819052600091825260409091209081015460029091015460ff1682565b60408051928352901515602083015201610152565b34801561020b57600080fd5b5061021f61021a366004610e52565b610b0a565b6040516101529190610e82565b34801561023857600080fd5b5061024c610247366004610e52565b610c2a565b6040516101529190610eee565b60035460ff161561029e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064015b60405180910390fd5b6003805460ff19166001908117909155336000908152602091909152604090206002015460ff161561030a5760405162461bcd60e51b81526020600482015260156024820152746661726d657220616c72656164792065786973747360581b6044820152606401610295565b604080516000606082018181526080830184528252602080830182905260018385018190523383528152929020815180519293919261034c9284920190610db7565b5060208281015160018301556040928301516002909201805460ff19169215159290921790915590513381527f427ba9f236784a85cd4be9f26588363451113ec0a2cdce2261ba33fdfe55592f910160405180910390a16003805460ff19169055565b600082116103f35760405162461bcd60e51b815260206004820152601160248201527007072696365206d757374206265203e203607c1b6044820152606401610295565b6000818152602081905260409020600101546001600160a01b0316331461042c5760405162461bcd60e51b815260040161029590610f73565b6000818152602081815260409182902084905581518481529081018390527f34995b050e346a517bc80e06cedb7e7627fa09899b5722c18b9a671f0886cb0991015b60405180910390a15050565b60035460ff16156104ba5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610295565b6003805460ff1916600190811790915533600090815260208290526040902001546105205760405162461bcd60e51b81526020600482015260166024820152756e6f2062616c616e636520746f20776974686472617760501b6044820152606401610295565b336000818152600160208190526040808320909101805490839055905190929083908381818185875af1925050503d806000811461057a576040519150601f19603f3d011682016040523d82523d6000602084013e61057f565b606091505b50509050806105c45760405162461bcd60e51b81526020600482015260116024820152701dda5d1a191c985dd85b0819985a5b1959607a1b6044820152606401610295565b50506003805460ff19169055565b600082116106165760405162461bcd60e51b815260206004820152601160248201527007072696365206d757374206265203e203607c1b6044820152606401610295565b600081116106365760405162461bcd60e51b815260040161029590610fb8565b3360009081526001602052604081206002015460ff16151590036106935760405162461bcd60e51b81526020600482015260146024820152733cb7ba9030b932903737ba1030903330b936b2b960611b6044820152606401610295565b60408051608081018252838152336020808301919091528183018490526002546060830181905260009081529081905291909120600101546001600160a01b03161561071a5760405162461bcd60e51b815260206004820152601660248201527570726f6475637420616c72656164792065786973747360501b6044820152606401610295565b600280546000908152602081815260408083208551815585830151600180830180546001600160a01b0319166001600160a01b039093169290921790915586830151828701556060808801516003909301929092553380865281855283862087548154938401825590875295859020909101949094559354815188815292830193909352810185905290917f51a0cb7a771a384411270e0a9f49a29aa71e325e7aababdd471697be0bb36874910160405180910390a2600280549060006107e083610ff9565b9190505550505050565b6000821161080a5760405162461bcd60e51b815260040161029590610fb8565b6000818152602081905260409020600101546001600160a01b031633146108435760405162461bcd60e51b815260040161029590610f73565b6000818152602081815260409182902060020184905581518481529081018390527f08853fadad5286ed8e3278749d18085a324221a9f8977ad2f2d540ccb7f11900910161046e565b600081116108ac5760405162461bcd60e51b815260040161029590610fb8565b6000828152602081905260409020600101546001600160a01b031661090c5760405162461bcd60e51b81526020600482015260166024820152751c1c9bd91d58dd08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606401610295565b600082815260208190526040902060010154336001600160a01b03909116036109775760405162461bcd60e51b815260206004820152601f60248201527f796f752063616e6e6f742062757920796f7572206f776e2070726f64756374006044820152606401610295565b6000828152602081905260409020600201548111156109cb5760405162461bcd60e51b815260206004820152601060248201526f6e6f7420656e6f7567682073746f636b60801b6044820152606401610295565b60008281526020819052604090205434906109e7908390611012565b1115610a2a5760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b6044820152606401610295565b60008281526020819052604081206002018054839290610a4b90849061102f565b9091555050600082815260208190526040902054610a6a908290611012565b6000838152602081815260408083206001908101546001600160a01b03168452918290528220018054909190610aa1908490611042565b9091555050600082815260208181526040918290206001015482513381526001600160a01b039091169181019190915290810182905282907f5ae6bd2f518a5ddf48ff0ed336e3b613bd2dc3875d68e17b152c6a05ce2135239060600160405180910390a25050565b610b30604051806060016040528060608152602001600081526020016000151581525090565b6001600160a01b03821660009081526001602052604081206002015460ff1615159003610b975760405162461bcd60e51b815260206004820152601560248201527419985c9b595c88191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606401610295565b6001600160a01b03821660009081526001602090815260409182902082518154608093810282018401909452606081018481529093919284928491840182828015610c0157602002820191906000526020600020905b815481526020019060010190808311610bed575b50505091835250506001820154602082015260029091015460ff16151560409091015292915050565b6001600160a01b0381166000908152600160209081526040808320805482518185028101850190935280835260609493830182828015610c8957602002820191906000526020600020905b815481526020019060010190808311610c75575b505050505090506000815167ffffffffffffffff811115610cac57610cac610f5d565b604051908082528060200260200182016040528015610d1157816020015b610cfe60405180608001604052806000815260200160006001600160a01b0316815260200160008152602001600081525090565b815260200190600190039081610cca5790505b50905060005b8251811015610daf57600080848381518110610d3557610d35611055565b602090810291909101810151825281810192909252604090810160002081516080810183528154815260018201546001600160a01b0316938101939093526002810154918301919091526003015460608201528251839083908110610d9c57610d9c611055565b6020908102919091010152600101610d17565b509392505050565b828054828255906000526020600020908101928215610df2579160200282015b82811115610df2578251825591602001919060010190610dd7565b50610dfe929150610e02565b5090565b5b80821115610dfe5760008155600101610e03565b60008060408385031215610e2a57600080fd5b50508035926020909101359150565b600060208284031215610e4b57600080fd5b5035919050565b600060208284031215610e6457600080fd5b81356001600160a01b0381168114610e7b57600080fd5b9392505050565b602080825282516060838301528051608084018190526000929190910190829060a08501905b80831015610ecb5783518252602082019150602084019350600183019250610ea8565b506020860151604086015260408601511515606086015280935050505092915050565b602080825282518282018190526000918401906040840190835b81811015610f52578351805184526020808201516001600160a01b031681860152604080830151908601526060918201519185019190915290930192608090920191600101610f08565b509095945050505050565b634e487b7160e01b600052604160045260246000fd5b60208082526025908201527f796f7520617265206e6f7420746865206f776e6572206f6620746869732070726040820152641bd91d58dd60da1b606082015260800190565b602080825260119082015270073746f636b206d757374206265203e203607c1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161100b5761100b610fe3565b5060010190565b808202811582820484141761102957611029610fe3565b92915050565b8181038181111561102957611029610fe3565b8082018082111561102957611029610fe3565b634e487b7160e01b600052603260045260246000fdfea264697066735822122063bc6a724cccdad533a94c0b24161ee7cc9f54e1f15375af60c6b4a7cdd89ad364736f6c634300081c0033";

type AgroConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgroConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Agro__factory extends ContractFactory {
  constructor(...args: AgroConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Agro & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Agro__factory {
    return super.connect(runner) as Agro__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgroInterface {
    return new Interface(_abi) as AgroInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Agro {
    return new Contract(address, _abi, runner) as unknown as Agro;
  }
}
